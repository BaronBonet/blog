name: Deploy Hugo blog to S3
description: Build and deploy Hugo blog to S3

inputs:
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true
  hugo-version:
    required: false
    type: string
    default: "0.89.4"
  domain-name:
    required: true
    type: string
  s3-bucket-name:
    required: true
  deploy:
    description: Whether to deploy the Hugo blog to S3, use 'true' or 'false'
    required: false
    default: false

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: ${{ inputs.hugo-version }}
        extended: true

    - name: Build Hugo blog
      shell: bash
      working-directory: src
      run: hugo --minify

    - name: Configure AWS
      if: ${{ inputs.deploy == 'true' }}
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: eu-central-1

    - name: Push to S3
      working-directory: src
      shell: bash
      if: ${{ inputs.deploy == 'true' }}
      run: aws s3 sync ./public s3://${{ inputs.s3-bucket-name }}/ --delete

    - name: Invalidate Cloudfront Cache
      shell: bash
      if: ${{ inputs.deploy == 'true' }}
      run: aws cloudfront create-invalidation --distribution-id $( aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[0]=='${{ inputs.domain-name}}'].Id | [0]" --output text) --paths "/*"
